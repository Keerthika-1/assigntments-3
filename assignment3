FEB 7 ASSIGNMENT
1 reverse each word;
import java.util.Scanner;
public class MyClass {
    public static void main(String args[]) {
        Scanner sc=new Scanner(System.in);
      String name=sc.nextLine();
      String reverse="";
      for(int i=name.length()-1;i>=0;i--){
     reverse=reverse+name.charAt(i);
}
        System.out.println(reverse);
        }
}
-----------------------------------------------------------------------------------------------------------------
2.COMPRESS STRING
import java.util.Scanner;
public class MyClass {
    public static void main(String args[]) {
      
Scanner sc=new Scanner(System.in);
String string = sc.nextLength();
    int counter;
    String result="";
    int i=0;
    while (i<string.length()){
        counter=1;
        for (int j=i+1;j<string.length();j++){ 
            System.out.println("string length ="+string.length());  
            if (string.charAt(i) == string.charAt(j)){
                  counter++;
            }
      }
      result = result+string.charAt(i)+counter; 
      string = string.replaceAll(String.valueOf(string.charAt(i)), ""); 
    }
    System.out.println("result is = "+result);
    }
}
------------------------------------------------------------------------------------------------------------------
public class GFG
{
    static final int ASCII_SIZE = 256;
    static char getMaxOccuringChar(String str)
  {
        int count[] = new int[ASCII_SIZE];
       int len = str.length();
        for (int i=0; i<len; i++)
            count[str.charAt(i)]++;
      
        int max = -1;  
        char result = ' ';   
for (int i = 0; i < len; i++) {
            if (max < count[str.charAt(i)]) {
                max = count[str.charAt(i)];
                result = str.charAt(i);
            }
        }
      
        return result;
    }
     
   
    public static void main(String[] args)
    {
        String str = "sample string";
        System.out.println("Max occurring character is " +
                            getMaxOccuringChar(str));
    }
}
-----------------------------------------------------------------------------------------------
IF STRING ARE EQUAL OR NOT

public class MyClass {
    public static void main(String args[]) {
String n1 =" keerthi";
String n2=" keerthi";
if (n1==n2){
    System.out.println("equal");
}else{
 System.out.println("not equal");
}
    }
}
-------------------------------------------------------------------------------------------------------------------------
CHECK PERMUTATION

public class Permutation 
{ 
    public static void main(String[] args) 
    { 
        String str = "ABC"; 
        int n = str.length(); 
        Permutation permutation = 
        new Permutation(); 
        permutation.permute(str, 0, n-1); 
    } 
  

    private void permute(String str, 
                         int l, int r) 
    { 
        if (l == r) 
            System.out.println(str); 
        else
        { 
            for (int i = l; i <= r; i++) 
            { 
                str = swap(str,l,i); 
                permute(str, l+1, r); 
                str = swap(str,l,i); 
            } 
        } 
    } 
  
    public String swap(String a, 
                       int i, int j) 
    { 
        char temp; 
        char[] charArray = a.toCharArray(); 
        temp = charArray[i] ; 
        charArray[i] = charArray[j]; 
        charArray[j] = temp; 
        return String.valueOf(charArray); 
    } 
} 
---------------------------------------------------------------------------------------------------------------
FEB 8th ASSIGNMENT
  
 1 Write a method which returns a string by removing special charaters( &,$,:,+,@)
   spaces from the string  
import java.util.Scanner;
public class RemoveSpecialCharacterExample3   
{  
public static void main(String[] args)   
{  
Scanner sc=new Scanner(System.in);
String str=sc.nextLine();  
String resultStr="";  
for (int i=0;i<str.length();i++)  
{  
    
if (str.charAt(i)>64 && str.charAt(i)<=125) 
{  

resultStr=resultStr+str.charAt(i);  
}  
}  
System.out.println("String after removing special characters: "+resultStr);  
}  
}  
-------------------------------------------------------------------------------------------------------------------
2  WAP to prove that intern() method guarantees to return unique String from from a String pool
public class UseIntern {

  public static void main(String[] args) {

    String firstString = "keerthi";
    String secondString = new String("keerthi");
    
    System.out.println(firstString == secondString);
    
    String thirdString = secondString.intern();
    
    System.out.println(firstString == thirdString); 
  }

}
---------------------------------------------------------------------------------------------------------------------------

Write a method which accepts a String as a parameter and returns ratio of vowels to consonants in String format
   Input: ""We are Proud to be an India""
   Output : ""11:10"""
public class Main {

  public static void main(String[] args) {
    String line = "I am keerthi .";
    int vowels = 0, consonants = 0, digits = 0, spaces = 0;

    line = line.toLowerCase();
    for (int i = 0; i < line.length(); ++i) {
      char ch = line.charAt(i);

     
      if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
        ++vowels;
      }

     
      else if ((ch >= 'a' && ch <= 'z')) {
        ++consonants;
      }
      
      else if (ch >= '0' && ch <= '9') {
           ++digits;
      }
      
      else if (ch == ' ') {
        ++spaces;
      }
      
      
    }
  }
-------------------------------------------------------------------------------------------------------------------------
FEB 9 assignments
1 make an array with user inputs of size 10. , then find sum of all elements in array
import java.util.Scanner;
public class UseIntern {
  public static void main(String[] args) 
    {
        int n, sum = 0;
        Scanner s = new Scanner(System.in);
       System.out.print("Enter no. of elements you want in array:");
        n = s.nextInt();
        int a[] = new int[n];
        System.out.println("Enter all the elements:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s.nextInt();
            sum = sum + a[i];
        }
        System.out.println("Sum:"+sum);
    }
}
-------------------------------------------------------------------------------------------------------------------
2 make an array with user inputs of size 10. , then find midle element in an array
import java.util.Scanner;
public class middle {
public static void main(String[] args) 

 {
    int extra = arr.length % 2 == 0? 1 : 0;

    int[] a = new int[1 + extra];

    int startIndex = arr.length / 2 - extra;
    int endIndex = arr.length / 2;

    for (int i = 0; i <= endIndex - startIndex; i++) {
        a[i] = arr[startIndex + i];
    }

    return a;

}
----------------------------------------------------------------------------
   FEB 10 Assignments
1 java program for reverse an array

public class MyClass {
    public static void main(String args[]) {
  int [] arr = new int [] {1, 2, 3, 4, 5};  
        System.out.println("Original array: ");  
        for (int i = 0; i < arr.length; i++) {  
            System.out.print(arr[i] + " ");  
        }  
        System.out.println();  
        System.out.println("Array in reverse order: ");  
        for (int i = arr.length-1; i >= 0; i--) {  
            System.out.print(arr[i] + " ");  
        }  
    }  
}  
----------------------------------------------------------------------------------------------------------
import java.util.Scanner;
public class JavaExample 
{
    public static void main(String[] args) 
    {
    	int count, temp;
    	
    
        Scanner scan = new Scanner(System.in);
        System.out.print("Enter number of elements you want in the array: ");
        count = scan.nextInt();
    
        int num[] = new int[count];
        System.out.println("Enter array elements:");
        for (int i = 0; i < count; i++) 
        {
            num[i] = scan.nextInt();
        }
        scan.close();
        for (int i = 0; i < count; i++) 
        {
            for (int j = i + 1; j < count; j++) { 
                if (num[i] > num[j]) 
                {
                    temp = num[i];
                    num[i] = num[j];
                    num[j] = temp;
                }
            }
        }
        System.out.print("Array Elements in Ascending Order: ");
        for (int i = 0; i < count - 1; i++) 
        {
            System.out.print(num[i] + ", ");
       
        }
        System.out.print(num[count - 1]);
    }
}
--------------------------------------------------------------------------------------------------------------------
WAP to find first index at which element is present in array 

import java.util.Arrays;
public class index {
  public static int findIndex(int arr[], int t)
    {
 
        int index = Arrays.binarySearch(arr, t);
        return (index < 0) ? -1 : index;
    }
    
    public static void main(String[] args)
    {
        int[] my_array = { 1,3,5,7,8 };
 
        System.out.println("Index position of 5 is: "
                           + findIndex(my_array, 0));
 
        
       
    }
}
-----------------------------------------------------------------------------------------------------------
WAP to find last index at which element is present in array 
import java.util.Arrays;
 
public class index {
 
    
    public static int findIndex(int arr[], int t)
    {
 
        int index = Arrays.binarySearch(arr, t);
        return (index < 0) ? -1 : index;
    }
    
    public static void main(String[] args)
    {
        int[] my_array = { 1, 2, 3, 4, 5, 6, 7 };
 
        
        System.out.println("Index position of 5 is: "
                           + findIndex(my_array, 5));
 
        
        System.out.println("Index position of 7 is: "
                           + findIndex(my_array, 7));
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   FEB 11 ASSIGNMENTS
1 max product of two integers

public class MyClass {
    public static void main(String args[]) {
      if (A.length < 2) {
            return;
        }
 
        int max_product = Integer.MIN_VALUE;
        int max_i = -1, max_j = -1;
        for (int i = 0; i < A.length - 1; i++)
        {
            for (int j = i + 1; j < A.length; j++)
            {
        
                if (max_product < A[i] * A[j])
                {
                    max_product = A[i] * A[j];
                    max_i = i;
                    max_j = j;
                }
            }
        }
 
        System.out.print("Pair is (" + A[max_i] + ", " + A[max_j] + ")");
    }
 
    public static void main (String[] args)
    {
        int[] A = { -10, -3, 5, 6, -2 };
 
        findMaximumProduct(A);
    }
}
}
}
---------------------------------------------------------------------------------------------------------------------
2import java.util.*;
 
pubvlic class {
 
static boolean checkUniqueFrequency(int arr[],
                                    int n)
{
    
    HashMap<Integer,
            Integer> freq = new HashMap<Integer,
                                        Integer>(
    {
        if(freq.containsKey(arr[i]))
        {
            freq.put(arr[i], freq.get(arr[i]) + 1);
        }else
        {
            freq.put(arr[i], 1);
        }
    }
 
    HashSet<Integer> uniqueFreq = new HashSet<Integer>();
    for(Map.Entry<Integer,
                  Integer> i : freq.entrySet())
    {
        if (uniqueFreq.contains(i.getValue()))
            return false;
        else
            uniqueFreq.add(i.getValue());
    }
    return true;
}
 
public static void main(String[] args
    int arr[] = { 1, 1, 2, 5, 5 };
    int n = arr.length;
 boolean res = checkUniqueFrequency(arr, n);
   if (res)
        System.out.print("Yes" + "\n");
    else
        System.out.print("No" + "\n");
}
}
---------------------------------------------------------------------------------------------

